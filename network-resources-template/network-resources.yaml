AWSTemplateFormatVersion: '2010-09-09'

Description: 
  This template creates the network resources for the EffulgenceTech 3-Tier architecture VPC with a NAT Gateway.

Parameters:
  VpcCIDR:
    Description: CIDR for the VPC
    Type: String
    Default: 10.0.0.0/16
  
  PublicSubnet1CIDR:
    Description: CIDR for Public Subnet 1
    Type: String
    Default: 10.0.1.0/24

  PublicSubnet2CIDR:
    Description: CIDR for Public Subnet 2
    Type: String
    Default: 10.0.2.0/24

  PrivateSubnet1CIDR:
    Description: CIDR for Private Subnet 1
    Type: String
    Default: 10.0.3.0/24

  PrivateSubnet2CIDR:
    Description: CIDR for Private Subnet 2
    Type: String
    Default: 10.0.4.0/24

  AvailabilityZone1:
    Description: Availability Zone 1
    Type: String
    Default: us-east-1a

  AvailabilityZone2:
    Description: Availability Zone 2
    Type: String
    Default: us-east-1b

Resources:
  Project1VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCIDR
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: production

  Project1IGW:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: stack
          Value: production

  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref Project1VPC
      InternetGatewayId: !Ref Project1IGW

  # Public Subnets
  PubSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref Project1VPC
      CidrBlock: !Ref PublicSubnet1CIDR
      AvailabilityZone: !Ref AvailabilityZone1
      MapPublicIpOnLaunch: true
      Tags:
        - Key: stack
          Value: production

  PubSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref Project1VPC
      CidrBlock: !Ref PublicSubnet2CIDR
      AvailabilityZone: !Ref AvailabilityZone2
      MapPublicIpOnLaunch: true
      Tags:
        - Key: stack
          Value: production

  # Private Subnets
  PrivSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref Project1VPC
      CidrBlock: !Ref PrivateSubnet1CIDR
      AvailabilityZone: !Ref AvailabilityZone1
      Tags:
        - Key: stack
          Value: production

  PrivSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref Project1VPC
      CidrBlock: !Ref PrivateSubnet2CIDR
      AvailabilityZone: !Ref AvailabilityZone2
      Tags:
        - Key: stack
          Value: production

  # Security Groups
  WebServerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow HTTP and SSH access
      VpcId: !Ref Project1VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0

  AppServerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow HTTP access from Web Servers & SSH access
      VpcId: !Ref Project1VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          SourceSecurityGroupId: !Ref WebServerSecurityGroup
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0

  DBServerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow database access from App Servers
      VpcId: !Ref Project1VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 3306
          ToPort: 3306
          SourceSecurityGroupId: !Ref AppServerSecurityGroup

Outputs:
  VPCId:
    Description: VPC ID
    Value: !Ref Project1VPC
    Export:
      Name: !Sub "${AWS::StackName}-VPCId"

  PublicSubnet1Id:
    Description: Public Subnet 1 ID
    Value: !Ref PubSubnet1
    Export:
      Name: !Sub "${AWS::StackName}-PublicSubnet1Id"

  PublicSubnet2Id:
    Description: Public Subnet 2 ID
    Value: !Ref PubSubnet2
    Export:
      Name: !Sub "${AWS::StackName}-PublicSubnet2Id"

  PrivateSubnet1Id:
    Description: Private Subnet 1 ID
    Value: !Ref PrivSubnet1
    Export:
      Name: !Sub "${AWS::StackName}-PrivateSubnet1Id"

  PrivateSubnet2Id:
    Description: Private Subnet 2 ID
    Value: !Ref PrivSubnet2
    Export:
      Name: !Sub "${AWS::StackName}-PrivateSubnet2Id"

  WebServerSecurityGroup:
    Description: Web Server Security Group ID
    Value: !Ref WebServerSecurityGroup
    Export:
      Name: WebServerSecurityGroup

  AppServerSecurityGroup:
    Description: Application Server Security Group ID
    Value: !Ref AppServerSecurityGroup
    Export:
      Name: AppServerSecurityGroup

  DBServerSecurityGroup:
    Description: Database Server Security Group ID
    Value: !Ref DBServerSecurityGroup
    Export:
      Name: DBServerSecurityGroup
